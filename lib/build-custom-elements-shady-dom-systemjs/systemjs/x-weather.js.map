{"version":3,"file":"x-weather.js","sources":["../../src/components/x-weather.js"],"sourcesContent":["import { loadComponent } from '../utilities.js'\n\nconst template = `\n  <style>\n    :host {\n      display: block;\n\n      --x-weather-location-margin: inherit;\n    }\n\n    div[data-x-weather] #location {\n      border: 0;\n      font-style: italic;\n      margin: var(--x-weather-location-margin);\n      padding: 0 2.5% 0 0;\n      width: 95%;\n    }\n  </style>\n\n  <div data-x-weather>\n    <div><input id=\"location\"></input></div>\n\n    <slot></slot>\n  </div>\n`\n\nconst XWeather = class extends HTMLElement {\n  constructor() {\n    super()\n\n    const container = document.createElement('div')\n    container.innerHTML = template\n\n    this.attachShadow({ mode: 'open' }).appendChild(container)\n  }\n\n  connectedCallback() {\n    this._upgradeProperty('appid')\n    this._upgradeProperty('host')\n    this._upgradeProperty('location')\n\n    this.xCurrent = this.querySelector('x-current')\n    this.xForecast = this.querySelector('x-forecast')\n\n    this._renderLocation(this.location)\n\n    const location = this.shadowRoot.querySelector('#location')\n\n    location.addEventListener('change', () => {\n      this.location = location.value\n\n      this.xCurrent.refresh().then(currentWeather => {\n        this.xCurrent.render(currentWeather)\n        // set this as a class property to be used later\n        this.xCurrent.currentWeather = currentWeather\n      })\n\n      this.xForecast.refresh().then(currentForecast => {\n        this.xForecast.render(currentForecast)\n        // set this as a class property to be used later\n        this.xForecast.currentForecast = currentForecast\n      })\n    })\n  }\n\n  attributeChangedCallback(attrName, oldVal, newVal) {\n    if (oldVal !== newVal && attrName === 'appid' || attrName === 'host' || attrName === 'location') {\n      if (attrName === 'location') {\n        this._renderLocation(this.location)\n      }\n\n      if (this.xCurrent) {\n        this.xCurrent.setAttribute(attrName, newVal)\n      }\n\n      if (this.xForecast) {\n        this.xForecast.setAttribute(attrName, newVal)\n      }\n    }\n  }\n\n  static get observedAttributes() {\n    return [ 'appid', 'host', 'location' ]\n  }\n\n  get appid() {\n    return this.getAttribute('appid')\n  }\n\n  set appid(appid) {\n    this.setAttribute('appid', appid)\n  }\n\n  get host() {\n    return this.getAttribute('host')\n  }\n\n  set host(host) {\n    this.setAttribute('host', host)\n  }\n\n  get location() {\n    return this.getAttribute('location')\n  }\n\n  set location(location) {\n    this.setAttribute('location', location)\n  }\n\n  _renderLocation(location) {\n    this.shadowRoot.querySelector('#location').value = location\n  }\n\n  _upgradeProperty(prop) {\n    if (this.hasOwnProperty(prop)) {\n      let value = this[prop]\n\n      delete this[prop]\n\n      this[prop] = value\n    }\n  }\n}\n\nexport const load = () => loadComponent({\n  customElements: customElements,\n  tagName: 'x-weather',\n  element: XWeather\n})\n\nexport default XWeather\n"],"names":["template","XWeather","container","document","createElement","innerHTML","attachShadow","mode","appendChild","_upgradeProperty","xCurrent","querySelector","xForecast","_renderLocation","location","shadowRoot","addEventListener","value","refresh","then","render","currentWeather","currentForecast","attrName","oldVal","newVal","setAttribute","prop","hasOwnProperty","getAttribute","appid","host","load","loadComponent","customElements","tagName","element"],"mappings":"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"}