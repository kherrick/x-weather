{"version":3,"file":"x-current.js","sources":["../../src/components/x-current.js"],"sourcesContent":["import { convertTemperature, dateTime, loadComponent, to12HourTime, unixEpochToDate } from '../utilities.js'\n// import current from '../../fixtures/current'\n\nconst template = `\n  <style>\n    :host {\n      display: block;\n\n      --icon-display: inherit\n    }\n\n    [data-icon] {\n      display: var(--icon-display);\n    }\n\n    div[data-x-current] ul {\n      list-style-type: none;\n\n      padding: 0 0 1rem 1.5rem;\n    }\n\n    div[data-x-current] ul > li {\n      padding: 0.5rem 0 0 0;\n    }\n\n    div[data-x-current] #alternateScale {\n      cursor: pointer;\n      border-bottom: 1px dotted;\n    }\n  </style>\n\n  <div data-x-current>\n    <ul>\n      <li><b id=\"time\"></b></li>\n      <li data-icon><img alt=\"\" id=\"icon\"></img></li>\n      <li>Current:</li>\n      <li>\n        <span id=\"temperature\"></span>Â°<span id=\"primaryScale\"></span> / <span><a id=\"alternateScale\"></a></span>\n      </li>\n    </ul>\n  </div>\n`\n\nconst XCurrent = class extends HTMLElement {\n  constructor() {\n    super()\n\n    const container = document.createElement('div')\n    container.innerHTML = template\n\n    this.attachShadow({ mode: 'open' }).appendChild(container)\n  }\n\n  connectedCallback() {\n    this.refresh().then(currentWeather => {\n      this.render(currentWeather)\n      // set this as a class property to be used later\n      this.currentWeather = currentWeather\n\n      this.primaryScale = this.shadowRoot.querySelector('#primaryScale')\n      this.alternateScale = this.shadowRoot.querySelector('#alternateScale')\n\n      this.primaryScale.textContent = this.scale\n      this.alternateScale.textContent = this.scale === 'C' ? 'F' : 'C'\n\n      this.alternateScale.onclick = () => {\n        // https://developer.mozilla.org/en-US/docs/Web/API/Node/textContent#Differences_from_innerText\n        // Sometimes people use innerHTML to retrieve or write text inside an element.\n        // textContent has better performance because its value is not parsed as HTML.\n        // Moreover, using textContent can prevent XSS attacks.\n        this.scale = this.alternateScale.textContent\n\n        // check for xForecast and set the scale attribute\n        const xForecast = this.parentElement.querySelector('x-forecast')\n\n        if (xForecast) {\n          xForecast.setAttribute('scale', this.primaryScale.textContent)\n        }\n      }\n    })\n  }\n\n  attributeChangedCallback(attrName, oldVal, newVal) {\n    // handle the scale attribute change\n    if (\n      attrName === 'scale' &&\n      oldVal !== newVal &&\n      this.alternateScale &&\n      this.primaryScale\n    ) {\n      if (newVal === 'C') {\n        this.alternateScale.textContent = 'F'\n        this.primaryScale.textContent = newVal\n      }\n\n      if (newVal === 'F') {\n        this.alternateScale.textContent = 'C'\n        this.primaryScale.textContent = newVal\n      }\n\n      this.render(this.currentWeather)\n    }\n  }\n\n  static get observedAttributes() {\n    return [ 'scale' ]\n  }\n\n  get appid() {\n    return this.getAttribute('appid')\n  }\n\n  set appid(appid) {\n    this.setAttribute('appid', appid)\n  }\n\n  get host() {\n    return this.getAttribute('host')\n  }\n\n  set host(host) {\n    this.setAttribute('host', host)\n  }\n\n  get location() {\n    return this.getAttribute('location')\n  }\n\n  set location(location) {\n    this.setAttribute('location', location)\n  }\n\n  set iconAlt(iconAlt) {\n    this.shadowRoot.querySelector('#icon').setAttribute('alt', iconAlt)\n  }\n\n  set iconSrc(iconSrc) {\n    this.shadowRoot.querySelector('#icon').src = iconSrc\n  }\n\n  get scale() {\n    return this.getAttribute('scale')\n  }\n\n  set scale(scale) {\n    this.setAttribute('scale', scale)\n  }\n\n  set temperature(temperature) {\n    this.setAttribute('temperature', temperature)\n\n    this.shadowRoot.querySelector('#temperature').textContent = temperature\n  }\n\n  set timestamp(timestamp) {\n    this.shadowRoot.querySelector('#time').textContent = to12HourTime(\n      dateTime(unixEpochToDate(timestamp))\n        .H(':')\n        .M(':')\n        .S()\n        .getResults()\n    )\n  }\n\n  _getCurrentWeather({ appid, host, location }) {\n    if (appid && host && location) {\n\n      return this._serviceHandler({ appid, host, location }).then(result => {\n        const { coord, weather, base, main, visibility, wind, clouds, dt, sys, id, name, cod } = result // eslint-disable-line no-unused-vars\n\n        return {\n          iconAlt: weather[0].description,\n          iconSrc: weather[0].icon,\n          temperature: {\n            kelvin: main.temp,\n            celsius: convertTemperature(main.temp, 'kToC'),\n            fahrenheit: convertTemperature(main.temp, 'kToF')\n          },\n          timestamp: dt\n        }\n      })\n    }\n  }\n\n  _serviceHandler({ appid, host, location }) {\n    const url = `https://${host}/data/2.5/weather?q=${location}&appid=${appid}` // eslint-disable-line no-unused-vars\n\n    // return current\n    return fetch(url, {\n      method: 'GET'\n    }).then(res => {\n      if (res.ok) {\n        return res.json()\n      }\n    })\n  }\n\n  refresh() {\n    const config = {\n      appid: this.parentElement.getAttribute('appid'),\n      host: this.parentElement.getAttribute('host'),\n      location: this.parentElement.getAttribute('location')\n    }\n\n    return this._getCurrentWeather(config)\n  }\n\n  render({ iconAlt, iconSrc, temperature, timestamp }) {\n    this.temperature = Number.parseFloat(temperature[this.scale === 'C' ? 'celsius' : 'fahrenheit']).toFixed(2)\n    this.iconAlt = iconAlt\n    this.iconSrc = `https://openweathermap.org/img/w/${iconSrc}.png`\n    this.timestamp = timestamp\n  }\n}\n\nexport const load = () => loadComponent({\n  customElements: customElements,\n  tagName: 'x-current',\n  element: XCurrent\n})\n\nexport default XCurrent\n"],"names":["template","XCurrent","container","document","createElement","innerHTML","attachShadow","mode","appendChild","refresh","then","render","currentWeather","primaryScale","shadowRoot","querySelector","alternateScale","textContent","scale","onclick","xForecast","parentElement","setAttribute","attrName","oldVal","newVal","appid","host","location","_serviceHandler","coord","result","weather","base","main","visibility","wind","clouds","dt","sys","id","name","cod","description","icon","temp","convertTemperature","url","fetch","res","ok","json","config","getAttribute","_getCurrentWeather","iconAlt","iconSrc","temperature","timestamp","Number","parseFloat","toFixed","src","to12HourTime","dateTime","unixEpochToDate","H","M","S","getResults","load","loadComponent","customElements"],"mappings":"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"}