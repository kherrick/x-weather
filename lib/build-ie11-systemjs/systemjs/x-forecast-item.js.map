{"version":3,"file":"x-forecast-item.js","sources":["../../src/components/x-forecast-item.js"],"sourcesContent":["import { loadComponent } from '../utilities.js'\n\nconst template = `\n  <style>\n    :host {\n      display: block;\n\n      --icon-display: inherit\n    }\n\n    [data-icon] {\n      display: var(--icon-display);\n    }\n\n    ul[data-x-forecast-item] {\n      list-style-type: none;\n\n      padding: 0 0 1rem 1.5rem;\n    }\n\n    ul[data-x-forecast-item] > li {\n      padding: 0.5rem 0 0 0;\n    }\n  </style>\n\n  <ul data-x-forecast-item>\n    <li>\n      <u id=\"forecastDate\"></u>\n    </li>\n    <li data-icon>\n      <img id=\"icon\" />\n    </li>\n    <li>Day: <span id=\"day\"></span>°<span data-scale></span></li>\n    <li>Night: <span id=\"night\"></span>°<span data-scale></span></li>\n  </ul>\n`\n\nconst XForecastItem = class extends HTMLElement {\n  constructor() {\n    super()\n\n    const container = document.createElement('div')\n    container.innerHTML = template\n\n    this.attachShadow({ mode: 'open' }).appendChild(container)\n  }\n\n  attributeChangedCallback(attrName, oldVal, newVal) {\n    switch (attrName) {\n      case 'day':\n        this.shadowRoot.getElementById('day').textContent = newVal\n        break;\n      case 'description':\n        this.shadowRoot.getElementById('icon').alt = newVal\n        break;\n      case 'forecast-date':\n        this.shadowRoot.getElementById('forecastDate').textContent = newVal\n        break;\n      case 'icon':\n        this.shadowRoot.getElementById('icon').src = newVal\n        break;\n      case 'night':\n        this.shadowRoot.getElementById('night').textContent = newVal\n        break;\n      case 'scale':\n        this.shadowRoot.querySelectorAll('[data-scale]').forEach(element => {\n          element.textContent = newVal\n        })\n        break;\n    }\n  }\n\n  static get observedAttributes() {\n    return [ 'day', 'description', 'forecast-date', 'icon', 'night', 'scale' ]\n  }\n}\n\nexport const load = () => loadComponent({\n  customElements: customElements,\n  tagName: 'x-forecast-item',\n  element: XForecastItem\n})\n\nexport default XForecastItem\n"],"names":["template","XForecastItem","container","document","createElement","innerHTML","attachShadow","mode","appendChild","attrName","oldVal","newVal","shadowRoot","getElementById","textContent","alt","src","querySelectorAll","forEach","element","HTMLElement","load","loadComponent","customElements","tagName"],"mappings":";;;;;;;;;;;;;;MAEA,IAAMA,+oBAAN;;MAmCA,IAAMC;MAAA;;MACJ,2BAAc;MAAA;;MAAA;;MAGZ,QAAMC,YAAYC,SAASC,aAAT,CAAuB,KAAvB,CAAlB;MACAF,cAAUG,SAAV,GAAsBL,QAAtB;;MAEA,UAAKM,YAAL,CAAkB,EAAEC,MAAM,MAAR,EAAlB,EAAoCC,WAApC,CAAgDN,SAAhD;MANY;MAOb;;MARG;MAAA;MAAA,6CAUqBO,QAVrB,EAU+BC,MAV/B,EAUuCC,MAVvC,EAU+C;MACjD,cAAQF,QAAR;MACE,aAAK,KAAL;MACE,eAAKG,UAAL,CAAgBC,cAAhB,CAA+B,KAA/B,EAAsCC,WAAtC,GAAoDH,MAApD;MACA;MACF,aAAK,aAAL;MACE,eAAKC,UAAL,CAAgBC,cAAhB,CAA+B,MAA/B,EAAuCE,GAAvC,GAA6CJ,MAA7C;MACA;MACF,aAAK,eAAL;MACE,eAAKC,UAAL,CAAgBC,cAAhB,CAA+B,cAA/B,EAA+CC,WAA/C,GAA6DH,MAA7D;MACA;MACF,aAAK,MAAL;MACE,eAAKC,UAAL,CAAgBC,cAAhB,CAA+B,MAA/B,EAAuCG,GAAvC,GAA6CL,MAA7C;MACA;MACF,aAAK,OAAL;MACE,eAAKC,UAAL,CAAgBC,cAAhB,CAA+B,OAA/B,EAAwCC,WAAxC,GAAsDH,MAAtD;MACA;MACF,aAAK,OAAL;MACE,eAAKC,UAAL,CAAgBK,gBAAhB,CAAiC,cAAjC,EAAiDC,OAAjD,CAAyD,mBAAW;MAClEC,oBAAQL,WAAR,GAAsBH,MAAtB;MACD,WAFD;MAGA;MApBJ;MAsBD;MAjCG;MAAA;MAAA,wBAmC4B;MAC9B,aAAO,CAAE,KAAF,EAAS,aAAT,EAAwB,eAAxB,EAAyC,MAAzC,EAAiD,OAAjD,EAA0D,OAA1D,CAAP;MACD;MArCG;MAAA;MAAA,EAA8BS,WAA9B,CAAN;;AAwCA,UAAaC,uBAAO,SAAPA,IAAO;MAAA,SAAMC,cAAc;MACtCC,oBAAgBA,cADsB;MAEtCC,aAAS,iBAF6B;MAGtCL,aAASlB;MAH6B,GAAd,CAAN;MAAA,CAAb;;;;;;;"}