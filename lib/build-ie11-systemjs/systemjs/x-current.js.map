{"version":3,"file":"x-current.js","sources":["../../src/components/x-current.js"],"sourcesContent":["import { convertTemperature, dateTime, loadComponent, to12HourTime, unixEpochToDate } from '../utilities.js'\n// import current from '../../fixtures/current'\n\nconst template = `\n  <style>\n    :host {\n      display: block;\n\n      --icon-display: inherit\n    }\n\n    [data-icon] {\n      display: var(--icon-display);\n    }\n\n    div[data-x-current] ul {\n      list-style-type: none;\n\n      padding: 0 0 1rem 1.5rem;\n    }\n\n    div[data-x-current] ul > li {\n      padding: 0.5rem 0 0 0;\n    }\n\n    div[data-x-current] #alternateScale {\n      cursor: pointer;\n      border-bottom: 1px dotted;\n    }\n  </style>\n\n  <div data-x-current>\n    <ul>\n      <li><b id=\"time\"></b></li>\n      <li data-icon><img alt=\"\" id=\"icon\"></img></li>\n      <li>Current:</li>\n      <li>\n        <span id=\"temperature\"></span>Â°<span id=\"primaryScale\"></span> / <span><a id=\"alternateScale\"></a></span>\n      </li>\n    </ul>\n  </div>\n`\n\nconst XCurrent = class extends HTMLElement {\n  constructor() {\n    super()\n\n    const container = document.createElement('div')\n    container.innerHTML = template\n\n    this.attachShadow({ mode: 'open' }).appendChild(container)\n  }\n\n  connectedCallback() {\n    this.refresh().then(currentWeather => {\n      this.render(currentWeather)\n      // set this as a class property to be used later\n      this.currentWeather = currentWeather\n\n      this.primaryScale = this.shadowRoot.querySelector('#primaryScale')\n      this.alternateScale = this.shadowRoot.querySelector('#alternateScale')\n\n      this.primaryScale.textContent = this.scale\n      this.alternateScale.textContent = this.scale === 'C' ? 'F' : 'C'\n\n      this.alternateScale.onclick = () => {\n        // https://developer.mozilla.org/en-US/docs/Web/API/Node/textContent#Differences_from_innerText\n        // Sometimes people use innerHTML to retrieve or write text inside an element.\n        // textContent has better performance because its value is not parsed as HTML.\n        // Moreover, using textContent can prevent XSS attacks.\n        this.scale = this.alternateScale.textContent\n\n        // check for xForecast and set the scale attribute\n        const xForecast = this.parentElement.querySelector('x-forecast')\n\n        if (xForecast) {\n          xForecast.setAttribute('scale', this.primaryScale.textContent)\n        }\n      }\n    })\n  }\n\n  attributeChangedCallback(attrName, oldVal, newVal) {\n    // handle the scale attribute change\n    if (\n      attrName === 'scale' &&\n      oldVal !== newVal &&\n      this.alternateScale &&\n      this.primaryScale\n    ) {\n      if (newVal === 'C') {\n        this.alternateScale.textContent = 'F'\n        this.primaryScale.textContent = newVal\n      }\n\n      if (newVal === 'F') {\n        this.alternateScale.textContent = 'C'\n        this.primaryScale.textContent = newVal\n      }\n\n      this.render(this.currentWeather)\n    }\n  }\n\n  static get observedAttributes() {\n    return [ 'scale' ]\n  }\n\n  get appid() {\n    return this.getAttribute('appid')\n  }\n\n  set appid(appid) {\n    this.setAttribute('appid', appid)\n  }\n\n  get host() {\n    return this.getAttribute('host')\n  }\n\n  set host(host) {\n    this.setAttribute('host', host)\n  }\n\n  get location() {\n    return this.getAttribute('location')\n  }\n\n  set location(location) {\n    this.setAttribute('location', location)\n  }\n\n  set iconAlt(iconAlt) {\n    this.shadowRoot.querySelector('#icon').setAttribute('alt', iconAlt)\n  }\n\n  set iconSrc(iconSrc) {\n    this.shadowRoot.querySelector('#icon').src = iconSrc\n  }\n\n  get scale() {\n    return this.getAttribute('scale')\n  }\n\n  set scale(scale) {\n    this.setAttribute('scale', scale)\n  }\n\n  set temperature(temperature) {\n    this.setAttribute('temperature', temperature)\n\n    this.shadowRoot.querySelector('#temperature').textContent = temperature\n  }\n\n  set timestamp(timestamp) {\n    this.shadowRoot.querySelector('#time').textContent = to12HourTime(\n      dateTime(unixEpochToDate(timestamp))\n        .H(':')\n        .M(':')\n        .S()\n        .getResults()\n    )\n  }\n\n  _getCurrentWeather({ appid, host, location }) {\n    if (appid && host && location) {\n\n      return this._serviceHandler({ appid, host, location }).then(result => {\n        const { coord, weather, base, main, visibility, wind, clouds, dt, sys, id, name, cod } = result // eslint-disable-line no-unused-vars\n\n        return {\n          iconAlt: weather[0].description,\n          iconSrc: weather[0].icon,\n          temperature: {\n            kelvin: main.temp,\n            celsius: convertTemperature(main.temp, 'kToC'),\n            fahrenheit: convertTemperature(main.temp, 'kToF')\n          },\n          timestamp: dt\n        }\n      })\n    }\n  }\n\n  _serviceHandler({ appid, host, location }) {\n    const url = `https://${host}/data/2.5/weather?q=${location}&appid=${appid}` // eslint-disable-line no-unused-vars\n\n    // return current\n    return fetch(url, {\n      method: 'GET'\n    }).then(res => {\n      if (res.ok) {\n        return res.json()\n      }\n    })\n  }\n\n  refresh() {\n    const config = {\n      appid: this.parentElement.getAttribute('appid'),\n      host: this.parentElement.getAttribute('host'),\n      location: this.parentElement.getAttribute('location')\n    }\n\n    return this._getCurrentWeather(config)\n  }\n\n  render({ iconAlt, iconSrc, temperature, timestamp }) {\n    this.temperature = Number.parseFloat(temperature[this.scale === 'C' ? 'celsius' : 'fahrenheit']).toFixed(2)\n    this.iconAlt = iconAlt\n    this.iconSrc = `https://openweathermap.org/img/w/${iconSrc}.png`\n    this.timestamp = timestamp\n  }\n}\n\nexport const load = () => loadComponent({\n  customElements: customElements,\n  tagName: 'x-current',\n  element: XCurrent\n})\n\nexport default XCurrent\n"],"names":["template","XCurrent","container","document","createElement","innerHTML","attachShadow","mode","appendChild","refresh","then","render","currentWeather","primaryScale","shadowRoot","querySelector","alternateScale","textContent","scale","onclick","xForecast","parentElement","setAttribute","attrName","oldVal","newVal","appid","host","location","_serviceHandler","coord","result","weather","base","main","visibility","wind","clouds","dt","sys","id","name","cod","iconAlt","description","iconSrc","icon","temperature","kelvin","temp","celsius","convertTemperature","fahrenheit","timestamp","url","fetch","method","res","ok","json","config","getAttribute","_getCurrentWeather","Number","parseFloat","toFixed","src","to12HourTime","dateTime","unixEpochToDate","H","M","S","getResults","HTMLElement","load","loadComponent","customElements","tagName","element"],"mappings":";;;;;;;;;;;;;;;;;;MACA;;MAEA,IAAMA,6wBAAN;;MAwCA,IAAMC;MAAA;;MACJ,sBAAc;MAAA;;MAAA;;MAGZ,QAAMC,YAAYC,SAASC,aAAT,CAAuB,KAAvB,CAAlB;MACAF,cAAUG,SAAV,GAAsBL,QAAtB;;MAEA,UAAKM,YAAL,CAAkB,EAAEC,MAAM,MAAR,EAAlB,EAAoCC,WAApC,CAAgDN,SAAhD;MANY;MAOb;;MARG;MAAA;MAAA,wCAUgB;MAAA;;MAClB,WAAKO,OAAL,GAAeC,IAAf,CAAoB,0BAAkB;MACpC,eAAKC,MAAL,CAAYC,cAAZ;MACA;MACA,eAAKA,cAAL,GAAsBA,cAAtB;;MAEA,eAAKC,YAAL,GAAoB,OAAKC,UAAL,CAAgBC,aAAhB,CAA8B,eAA9B,CAApB;MACA,eAAKC,cAAL,GAAsB,OAAKF,UAAL,CAAgBC,aAAhB,CAA8B,iBAA9B,CAAtB;;MAEA,eAAKF,YAAL,CAAkBI,WAAlB,GAAgC,OAAKC,KAArC;MACA,eAAKF,cAAL,CAAoBC,WAApB,GAAkC,OAAKC,KAAL,KAAe,GAAf,GAAqB,GAArB,GAA2B,GAA7D;;MAEA,eAAKF,cAAL,CAAoBG,OAApB,GAA8B,YAAM;MAClC;MACA;MACA;MACA;MACA,iBAAKD,KAAL,GAAa,OAAKF,cAAL,CAAoBC,WAAjC;;MAEA;MACA,cAAMG,YAAY,OAAKC,aAAL,CAAmBN,aAAnB,CAAiC,YAAjC,CAAlB;;MAEA,cAAIK,SAAJ,EAAe;MACbA,sBAAUE,YAAV,CAAuB,OAAvB,EAAgC,OAAKT,YAAL,CAAkBI,WAAlD;MACD;MACF,SAbD;MAcD,OAzBD;MA0BD;MArCG;MAAA;MAAA,6CAuCqBM,QAvCrB,EAuC+BC,MAvC/B,EAuCuCC,MAvCvC,EAuC+C;MACjD;MACA,UACEF,aAAa,OAAb,IACAC,WAAWC,MADX,IAEA,KAAKT,cAFL,IAGA,KAAKH,YAJP,EAKE;MACA,YAAIY,WAAW,GAAf,EAAoB;MAClB,eAAKT,cAAL,CAAoBC,WAApB,GAAkC,GAAlC;MACA,eAAKJ,YAAL,CAAkBI,WAAlB,GAAgCQ,MAAhC;MACD;;MAED,YAAIA,WAAW,GAAf,EAAoB;MAClB,eAAKT,cAAL,CAAoBC,WAApB,GAAkC,GAAlC;MACA,eAAKJ,YAAL,CAAkBI,WAAlB,GAAgCQ,MAAhC;MACD;;MAED,aAAKd,MAAL,CAAY,KAAKC,cAAjB;MACD;MACF;MA3DG;MAAA;MAAA,6CAyH0C;MAAA,UAAzBc,KAAyB,QAAzBA,KAAyB;MAAA,UAAlBC,IAAkB,QAAlBA,IAAkB;MAAA,UAAZC,QAAY,QAAZA,QAAY;;MAC5C,UAAIF,SAASC,IAAT,IAAiBC,QAArB,EAA+B;;MAE7B,eAAO,KAAKC,eAAL,CAAqB,EAAEH,YAAF,EAASC,UAAT,EAAeC,kBAAf,EAArB,EAAgDlB,IAAhD,CAAqD,kBAAU;MAAA,cAC5DoB,KAD4D,GACqBC,MADrB,CAC5DD,KAD4D;MAAA,cACrDE,OADqD,GACqBD,MADrB,CACrDC,OADqD;MAAA,cAC5CC,IAD4C,GACqBF,MADrB,CAC5CE,IAD4C;MAAA,cACtCC,IADsC,GACqBH,MADrB,CACtCG,IADsC;MAAA,cAChCC,UADgC,GACqBJ,MADrB,CAChCI,UADgC;MAAA,cACpBC,IADoB,GACqBL,MADrB,CACpBK,IADoB;MAAA,cACdC,MADc,GACqBN,MADrB,CACdM,MADc;MAAA,cACNC,EADM,GACqBP,MADrB,CACNO,EADM;MAAA,cACFC,GADE,GACqBR,MADrB,CACFQ,GADE;MAAA,cACGC,EADH,GACqBT,MADrB,CACGS,EADH;MAAA,cACOC,IADP,GACqBV,MADrB,CACOU,IADP;MAAA,cACaC,GADb,GACqBX,MADrB,CACaW,GADb;;MAGpE,iBAAO;MACLC,qBAASX,QAAQ,CAAR,EAAWY,WADf;MAELC,qBAASb,QAAQ,CAAR,EAAWc,IAFf;MAGLC,yBAAa;MACXC,sBAAQd,KAAKe,IADF;MAEXC,uBAASC,mBAAmBjB,KAAKe,IAAxB,EAA8B,MAA9B,CAFE;MAGXG,0BAAYD,mBAAmBjB,KAAKe,IAAxB,EAA8B,MAA9B;MAHD,aAHR;MAQLI,uBAAWf;MARN,WAAP;MAUD,SAbM,CAAP;MAcD;MACF;MA3IG;MAAA;MAAA,2CA6IuC;MAAA,UAAzBZ,KAAyB,SAAzBA,KAAyB;MAAA,UAAlBC,IAAkB,SAAlBA,IAAkB;MAAA,UAAZC,QAAY,SAAZA,QAAY;;MACzC,UAAM0B,mBAAiB3B,IAAjB,4BAA4CC,QAA5C,eAA8DF,KAApE,CADyC;;MAGzC;MACA,aAAO6B,MAAMD,GAAN,EAAW;MAChBE,gBAAQ;MADQ,OAAX,EAEJ9C,IAFI,CAEC,eAAO;MACb,YAAI+C,IAAIC,EAAR,EAAY;MACV,iBAAOD,IAAIE,IAAJ,EAAP;MACD;MACF,OANM,CAAP;MAOD;MAxJG;MAAA;MAAA,8BA0JM;MACR,UAAMC,SAAS;MACblC,eAAO,KAAKL,aAAL,CAAmBwC,YAAnB,CAAgC,OAAhC,CADM;MAEblC,cAAM,KAAKN,aAAL,CAAmBwC,YAAnB,CAAgC,MAAhC,CAFO;MAGbjC,kBAAU,KAAKP,aAAL,CAAmBwC,YAAnB,CAAgC,UAAhC;MAHG,OAAf;;MAMA,aAAO,KAAKC,kBAAL,CAAwBF,MAAxB,CAAP;MACD;MAlKG;MAAA;MAAA,kCAoKiD;MAAA,UAA5CjB,OAA4C,SAA5CA,OAA4C;MAAA,UAAnCE,OAAmC,SAAnCA,OAAmC;MAAA,UAA1BE,WAA0B,SAA1BA,WAA0B;MAAA,UAAbM,SAAa,SAAbA,SAAa;;MACnD,WAAKN,WAAL,GAAmBgB,OAAOC,UAAP,CAAkBjB,YAAY,KAAK7B,KAAL,KAAe,GAAf,GAAqB,SAArB,GAAiC,YAA7C,CAAlB,EAA8E+C,OAA9E,CAAsF,CAAtF,CAAnB;MACA,WAAKtB,OAAL,GAAeA,OAAf;MACA,WAAKE,OAAL,yCAAmDA,OAAnD;MACA,WAAKQ,SAAL,GAAiBA,SAAjB;MACD;MAzKG;MAAA;MAAA,wBAiEQ;MACV,aAAO,KAAKQ,YAAL,CAAkB,OAAlB,CAAP;MACD,KAnEG;MAAA,sBAqEMnC,KArEN,EAqEa;MACf,WAAKJ,YAAL,CAAkB,OAAlB,EAA2BI,KAA3B;MACD;MAvEG;MAAA;MAAA,wBAyEO;MACT,aAAO,KAAKmC,YAAL,CAAkB,MAAlB,CAAP;MACD,KA3EG;MAAA,sBA6EKlC,IA7EL,EA6EW;MACb,WAAKL,YAAL,CAAkB,MAAlB,EAA0BK,IAA1B;MACD;MA/EG;MAAA;MAAA,wBAiFW;MACb,aAAO,KAAKkC,YAAL,CAAkB,UAAlB,CAAP;MACD,KAnFG;MAAA,sBAqFSjC,QArFT,EAqFmB;MACrB,WAAKN,YAAL,CAAkB,UAAlB,EAA8BM,QAA9B;MACD;MAvFG;MAAA;MAAA,sBAyFQe,OAzFR,EAyFiB;MACnB,WAAK7B,UAAL,CAAgBC,aAAhB,CAA8B,OAA9B,EAAuCO,YAAvC,CAAoD,KAApD,EAA2DqB,OAA3D;MACD;MA3FG;MAAA;MAAA,sBA6FQE,OA7FR,EA6FiB;MACnB,WAAK/B,UAAL,CAAgBC,aAAhB,CAA8B,OAA9B,EAAuCmD,GAAvC,GAA6CrB,OAA7C;MACD;MA/FG;MAAA;MAAA,wBAiGQ;MACV,aAAO,KAAKgB,YAAL,CAAkB,OAAlB,CAAP;MACD,KAnGG;MAAA,sBAqGM3C,KArGN,EAqGa;MACf,WAAKI,YAAL,CAAkB,OAAlB,EAA2BJ,KAA3B;MACD;MAvGG;MAAA;MAAA,sBAyGY6B,WAzGZ,EAyGyB;MAC3B,WAAKzB,YAAL,CAAkB,aAAlB,EAAiCyB,WAAjC;;MAEA,WAAKjC,UAAL,CAAgBC,aAAhB,CAA8B,cAA9B,EAA8CE,WAA9C,GAA4D8B,WAA5D;MACD;MA7GG;MAAA;MAAA,sBA+GUM,SA/GV,EA+GqB;MACvB,WAAKvC,UAAL,CAAgBC,aAAhB,CAA8B,OAA9B,EAAuCE,WAAvC,GAAqDkD,aACnDC,SAASC,gBAAgBhB,SAAhB,CAAT,EACGiB,CADH,CACK,GADL,EAEGC,CAFH,CAEK,GAFL,EAGGC,CAHH,GAIGC,UAJH,EADmD,CAArD;MAOD;MAvHG;MAAA;MAAA,wBA6D4B;MAC9B,aAAO,CAAE,OAAF,CAAP;MACD;MA/DG;MAAA;MAAA,EAAyBC,WAAzB,CAAN;;AA4KA,UAAaC,uBAAO,SAAPA,IAAO;MAAA,SAAMC,cAAc;MACtCC,oBAAgBA,cADsB;MAEtCC,aAAS,WAF6B;MAGtCC,aAAS9E;MAH6B,GAAd,CAAN;MAAA,CAAb;;;;;;;"}